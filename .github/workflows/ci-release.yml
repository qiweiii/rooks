name: CI and Semantic Release
on:
  push:
    branches:
      [
        "+([0-9])?(.{+([0-9]),x}).x",
        "main",
        "next",
        "next-major",
        "beta",
        "alpha",
        "!all-contributors/**",
      ]
  pull_request:
    branches-ignore: ["all-contributors/**"]
jobs:
  main:
    strategy:
      matrix:
        node: [14, 15]
    runs-on: ubuntu-latest
    steps:
      - name: "Check if user has write access"
        uses: "lannonbr/repo-permission-check-action@2.0.0"
        with:
          permission: "write"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v2

      - name: ‚éî Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install project dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true' # Over here!
        run: yarn
      - name: test
        run: yarn test --coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2

  release:
    env:
      ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
    needs: main
    runs-on: ubuntu-latest
    if: ${{ github.repository == 'imbhargav5/rooks' &&
      contains('refs/heads/main,refs/heads/beta,refs/heads/next,refs/heads/next-major,refs/heads/alpha',
      github.ref) && github.event_name == 'push' }}
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v2

      - name: ‚éî Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install project dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true' # Over here!
        run: yarn

      - name: üèó Run build script
        run: npm run build

      - name: üöÄ Release
        uses: cycjimmy/semantic-release-action@v2
        id: semantic-release
        with:
          semantic_version: 17
          branches: |
            [
              '+([0-9])?(.{+([0-9]),x}).x',
              'main',
              'next',
              'next-major',
              {name: 'beta', prerelease: true},
              {name: 'alpha', prerelease: true}
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: update contributors
        run: |
          yarn contributors:update
          yarn contributors:generate
      - name: generate docs and sidebars
        run: yarn update-docusaurus-sidebars
      - name: generate changelog
        if:
          ${{ steps.semantic-release.outputs.new_release_published == 'true' && github.repository == 'imbhargav5/rooks' &&
          contains('refs/heads/main',github.ref)}}
        run: yarn generate:changelog
      - name: create docusaurus version
        if:
          ${{ steps.semantic-release.outputs.new_release_published == 'true' && github.repository == 'imbhargav5/rooks' &&
          contains('refs/heads/main',github.ref)}}
        run: yarn run docs:version ${{steps.semantic-release.outputs.new_release_version}}
      - name: Commit sidebars, changelog and docs
        continue-on-error: true
        if:
          ${{ steps.semantic-release.outputs.new_release_published == 'true' && github.repository == 'imbhargav5/rooks' &&
          contains('refs/heads/main',github.ref)}}
        run: |
          git add .
          git config push.default current
          git -c user.name="imbhargav5" -c user.email="imbhargav5@users.noreply.github.com" \
            commit -m "chore(docs): Update changelog and docs" --no-verify --quiet
          git pull --rebase
          git push
